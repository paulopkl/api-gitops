name: Deploy to ECR

on:
  pull_request:
    branches: 
      - main
      - dev
      - prod

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest
    env:
      ECR_REPOSITORY: "paulo/gitops"
      IMAGE_TAG: "latest"
    steps:

      - name: Check out code
        uses: actions/checkout@v2
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Extract project name
        id: extract-project
        run: |
          echo "::set-output name=project_name::$(basename $GITHUB_REPOSITORY)"

      - name: Display project name
        run: |
          echo "Project Name: ${{ steps.extract-project.outputs.project_name }}"

      - name: Extract branch name
        id: extract-branch
        run: |
          echo "::set-output name=branch::$(echo $GITHUB_REF | awk -F'/' '{print $NF}')"

      - name: Display branch name
        run: |
          echo "Branch Name: ${{ steps.extract-branch.outputs.branch }}"

      - name: Extract short commit SHA
        id: extract-commit-sha
        run: |
          echo "::set-output name=short_commit_sha::${GITHUB_SHA::7}"

      - name: Display short commit SHA
        run: |
          echo "Short Commit SHA: ${{ steps.extract-commit-sha.outputs.short_commit_sha }}"

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy-me:
    name: Deploy new image to Help repository
    runs-on: ubuntu-latest
    env:
      CONFIG_REPO_NAME: gitops-helm
      GITHUB_USER_EMAIL: palmeida.ipms@gmail.com
      GITHUB_USER_NAME: paulopkl
    steps:

        - name: Check out code
          uses: actions/checkout@v2

        # - name: Configure Git repository and change current image
        #   run: |
        #       git config --global user.email "$GITHUB_USER_EMAIL"
        #       git config --global user.name "$GITHUB_USER_NAME"
        #       git config --global credential.helper cache
        #       git clone https://${{ secrets.ACCESS_TOKEN }}@github.com/$GITHUB_USER_NAME/$CONFIG_REPO_NAME.git
        #       echo "Enter $CONFIG_REPO_NAME"
        #       cd $CONFIG_REPO_NAME
        #       echo "list files"
        #       ls -lh
        #       git remote -v
        #       git checkout -b $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
        #       'ls $PROJECT_FOLDER/helm/values-$CI_COMMIT_REF_SLUG*.yaml | xargs sed -i -r "s/tag: (.*)/tag: $CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA/g"'
        #       git status
        #       git add .
        #       git commit -m "Update image tag from CI on $CI_PROJECT_NAME - $CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA - $(date)"
        #       git push origin $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA

# docker-build-prod:
#   <<: *template-build-docker-image
#   only:
#     refs:
#       - prod

# change-image-tag-helm: &change-image-tag-helm
#   image: 
#     name: robertsilvatech/ubuntu-with-git:20.04
#     entrypoint: [ '/bin/bash', '-c', 'ln -snf /bin/bash /bin/sh && /bin/bash -c $0' ]
#   needs: 
#     - docker-build
#   stage: change-image-tag
#   variables:
#     CONFIG_REPO_NAME: sample-gitops-example-dev-team
#     PROJECT_FOLDER: sample-python-application
#   before_script:
#     - git config --global user.email "ci@argo" && git config --global user.name "Gitlab CI"    
#   script:
#     - echo "cloning config repo $CONFIG_REPO_NAME"
#     - git clone "https://$GIT_TOKEN_USER:$GIT_TOKEN@gitlab.com/robertsilvatech/$CONFIG_REPO_NAME.git"
#     - echo "Enter $CONFIG_REPO_NAME"
#     - cd $CONFIG_REPO_NAME
#     - echo "list files"
#     - ls -lh
#     - git remote -v
#     - git checkout -b $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
#     - 'ls $PROJECT_FOLDER/helm/values-$CI_COMMIT_REF_SLUG*.yaml | xargs sed -i -r "s/tag: (.*)/tag: $CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA/g"'
#     - git status
#     - git add .
#     - git commit -m "Update image tag from CI on $CI_PROJECT_NAME - $CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA"
#     - git push origin $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
#   only:
#     - dev

# change-image-tag-helm-prod:
#   <<: *change-image-tag-helm
#   needs: [ docker-build-prod ]
#   only: 
#     - prod
