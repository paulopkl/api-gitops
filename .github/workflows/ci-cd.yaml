name: Deploy to ECR

on:
  pull_request:
    branches:
      - dev
      - prod

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest
    env:
      ECR_REPOSITORY: "paulo/gitops"
      AWS_REGION: us-east-1
    steps:

      - name: Check out code
        uses: actions/checkout@v2
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'

      - name: Extract short commit SHA
        id: extract-commit-sha
        run: echo "::set-output name=short_commit_sha::${GITHUB_SHA::7}"

      - name: Extract branch name
        id: branch_name
        run: echo "::set-output name=branch::${{ github.base_ref }}"

      # - name: Authenticate Docker in ECR
      #   run: docker login --username AWS --password-stdin <aws_account_id>.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ steps.branch_name.outputs.branch }}-${{ steps.extract-commit-sha.outputs.short_commit_sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

  deploy-me:
    needs: build
    name: Deploy new image to Help repository
    runs-on: ubuntu-latest
    env:
      CONFIG_REPO_NAME: gitops-helm
      PROJECT_FOLDER: api-gitops
      GITHUB_USER_EMAIL: palmeida.ipms@gmail.com
      GITHUB_USER_NAME: paulopkl
    steps:

        - name: Check out code
          uses: actions/checkout@v2

        - name: Extract short commit SHA
          id: extract-commit-sha
          run: echo "::set-output name=short_commit_sha::${GITHUB_SHA::7}"

        - name: Extract branch name
          id: branch_name
          run: echo "::set-output name=branch::${{ github.base_ref }}"

        - name: Display [branch]-[short commit sha]
          run: echo ${{ steps.branch_name.outputs.branch }}-${{ steps.extract-commit-sha.outputs.short_commit_sha }}

        - name: Configure Git global credentials repository and change current image
          run: |
            git config --global user.email "$GITHUB_USER_EMAIL"
            git config --global user.name "$GITHUB_USER_NAME"
            git config --global credential.helper cache
        
        - name: Clone repository
          run: git clone https://${{ secrets.ACCESS_TOKEN }}@github.com/$GITHUB_USER_NAME/$CONFIG_REPO_NAME.git

        - name: Modify image version
          env:
            IMAGE_TAG: ${{ steps.branch_name.outputs.branch }}-${{ steps.extract-commit-sha.outputs.short_commit_sha }}
          run: |
            echo "Enter $CONFIG_REPO_NAME"
            cd $CONFIG_REPO_NAME
            echo "list files"
            ls -lh
            git remote -v
            git checkout -b $CONFIG_REPO_NAME-$IMAGE_TAG

        - name: Modify image version
          env:
            IMAGE_TAG: ${{ steps.branch_name.outputs.branch }}-${{ steps.extract-commit-sha.outputs.short_commit_sha }}
          run: 'ls $PROJECT_FOLDER/helm/values-$TARGET_BRANCH.yaml | xargs sed -i -r "s/tag: (.*)/tag: $IMAGE_TAG/g"'
        
        - name: Commit and push changes repository
          env:
            IMAGE_TAG: ${{ steps.branch_name.outputs.branch }}-${{ steps.extract-commit-sha.outputs.short_commit_sha }}
          run: |
            git status
            git add .
            git commit -m "Update image tag from CI on $CI_PROJECT_NAME - $IMAGE_TAG - $(date)"
            git push origin $CONFIG_REPO_NAME-$IMAGE_TAG
